# project-pages.yml

- layout: project
  title: 'Super Shopper'
  slug: 'super-shopper'  # Use kebab-case for the slug
  description: >
    An innovative e-commerce platform providing a seamless shopping experience
    with cutting-edge technology Lorem ipsum dolor sit amet, consectetur adipiscing
    elit. Integer sit amet sem elit. Vestibulum mattis tempor lacus a maximus.
  
  technologies:
    - React
    - Azure
    - ASP.NET Core
    - MySQL
    - Docker
    - Auth0

  code_url: 'https://github.com/yourusername/super-shopper'
  demo_url: 'https://supershopperdemo.com'

  key_features:
    - title: 'Feature X'
      description: >
        Real-time product search and advanced filtering options. Lorem ipsum dolor sit amet,
        consectetur adipiscing elit. Sed ultricies commodo enim, at sodales mauris iaculis et.
        Sed nec pretium urna. Maecenas magna velit, ultricies eu nibh id, porttitor fringilla ex.
      image: 'https://upload.wikimedia.org/wikipedia/commons/thumb/3/3a/Astor_Market_meat_counter_in_Manhattan_in_1915.jpg/450px-Astor_Market_meat_counter_in_Manhattan_in_1915.jpg'
      caption : 'Add a caption for the image'

    - title: 'Feature Y'
      description: >
        Secure user authentication and authorization using Auth0. Lorem ipsum dolor sit amet,
        consectetur adipiscing elit. Sed ultricies commodo enim, at sodales mauris iaculis et.
        Sed nec pretium urna. Maecenas magna velit, ultricies eu nibh id, porttitor fringilla ex.
      image: 'https://upload.wikimedia.org/wikipedia/commons/thumb/b/b7/Piggly_Wiggly_store%2C_1918.png/450px-Piggly_Wiggly_store%2C_1918.png'
      caption : 'Add a caption for the image'

    - title: 'Feature Z'
      description: >
        Scalable backend services deployed with Docker on Azure. Lorem ipsum dolor sit amet,
        consectetur adipiscing elit. Sed ultricies commodo enim, at sodales mauris iaculis et.
        Sed nec pretium urna. Maecenas magna velit, ultricies eu nibh id, porttitor fringilla ex.
      image: 'https://upload.wikimedia.org/wikipedia/commons/thumb/3/3d/SB-butik_1941.jpg/330px-SB-butik_1941.jpg'
      caption : 'Add a caption for the image'

  visuals:
    demo_video: 'https://www.loom.com/embed/38f2ba3f2177432c8578c549114e7307?sid=820badd7-2327-476a-bf8a-ba81c6fc3ecb'
    dev_video: 'https://www.loom.com/embed/51c2dfa0c7bc4a0696bd262d7a3fb626?sid=bd87c4f6-f438-43f9-b857-a27a224548c7'  # Optional
    thumbnail: '/assets/images/project-ticketer-cover.svg'

  development_process:
    overview: >
      Developed over three months, focusing on creating a robust and user-friendly e-commerce platform.
      Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed ultricies commodo enim, at sodales
      mauris iaculis et.

    steps:
      - title: 'Planning and Approach'
        description: >
          Initiated with extensive market research and wireframing; selected React and ASP.NET Core for a
          responsive frontend and a powerful backend. Lorem ipsum dolor sit amet, consectetur adipiscing
          elit. Sed ultricies commodo enim, at sodales mauris iaculis et. Sed nec pretium urna. Maecenas
          magna velit, ultricies eu nibh id, porttitor fringilla ex.
        image: 'https://upload.wikimedia.org/wikipedia/commons/thumb/3/3a/Astor_Market_meat_counter_in_Manhattan_in_1915.jpg/450px-Astor_Market_meat_counter_in_Manhattan_in_1915.jpg'
        caption : 'A caption'

      - title: 'Team Collaboration'
        description: >
          Collaborated with a team using Agile methodologies, utilizing tools like JIRA and Slack for
          effective communication. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed ultricies
          commodo enim, at sodales mauris iaculis et. Sed nec pretium urna. Maecenas magna velit, ultricies
          eu nibh id, porttitor fringilla ex.
        image: 'https://upload.wikimedia.org/wikipedia/commons/thumb/b/b7/Piggly_Wiggly_store%2C_1918.png/450px-Piggly_Wiggly_store%2C_1918.png'
        caption : 'A caption'

      - title: 'Challenges and Solutions'
        description: >
          Encountered challenges with integrating Auth0 for authentication; overcame them by implementing
          custom middleware and thorough testing. Lorem ipsum dolor sit amet, consectetur adipiscing elit.
          Sed ultricies commodo enim, at sodales mauris iaculis et. Sed nec pretium urna. Maecenas magna
          velit, ultricies eu nibh id, porttitor fringilla ex.
        image: 'https://upload.wikimedia.org/wikipedia/commons/thumb/3/3d/SB-butik_1941.jpg/330px-SB-butik_1941.jpg'
        caption : 'A caption'

      - title: 'Outcomes and Reflections'
        description: >
          Successfully launched a fully functional e-commerce site; the project exceeded performance
          expectations but identified areas for UI improvements. Lorem ipsum dolor sit amet, consectetur
          adipiscing elit. Sed ultricies commodo enim, at sodales mauris iaculis et. Sed nec pretium urna.
          Maecenas magna velit, ultricies eu nibh id, porttitor fringilla ex.
        image: 'https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/EmpressWalkLoblaws-Vivid.jpg/330px-EmpressWalkLoblaws-Vivid.jpg'
        caption : 'A caption'

    lessons_learned: 
      - >
        Enhanced skills in full-stack development, cloud deployment, and learned the importance of iterative testing and agile teamwork. Sed nec pretium urna. Maecenas magna velit, ultricies eu nibh id, porttitor fringilla ex. Sed nec pretium urna. Maecenas magna velit, ultricies eu nibh id, porttitor fringilla ex.
      - >
        Sed nec pretium urna. Maecenas magna velit, ultricies eu nibh id, porttitor fringilla ex. Sed nec pretium urna. Maecenas magna velit, ultricies eu nibh id, porttitor fringilla ex.

- layout: project
  title: 'Ticketer'
  slug: 'ticketer'  # Use kebab-case for the slug
  description: >
    Ticketer is a visual work management platform designed to aid the way individuals and teams organize their tasks and projects. Utilizing the proven Kanban board system, Ticketer offers a seamless and intuitive interface that empowers users to effortlessly create, customize, and manage boards, lists, and tickets tailored to their unique workflows.
  
  technologies:
    - 'Angular'
    - 'Typescript'
    - 'C#'
    - 'ASP.NET Core'
    - 'MySQL'
    - 'Azure Cloud Services'
    - 'Docker'

  code_url: 'https://github.com/daniel-grabczewski/Ticketer'
  demo_url: 'https://ticketerapp.com'

  key_features:
    - title: 'Customizable Boards'
      description: >
        Design and organize multiple boards tailored to your projects or personal workflows. Personalize each board with unique names, vibrant colors, and stunning backgrounds to reflect your style or team identity. Easily create, save, and duplicate templates to streamline your setup and maintain consistency across different projects.

      image: '/assets/images/ticketer-project/customizable-boards.png'
      caption : 'Screenshot of the Ticketer board page'  

    - title: 'Flexible Lists'
      description: >
        Structure your workflow with adaptable lists that categorize your tasks effortlessly. Whether it's "To Do," "In Progress," or custom categories, you can create, rename, and duplicate lists to build templates that fit your specific needs. This flexibility ensures that your task management adapts as your projects evolve.

      image: '/assets/images/ticketer-project/flexible-lists.png'
      caption : 'Diagram showing all actions that user can perform on a list'  

    - title: 'Comprehensive Tickets'
      description: >
        Dive deep into task management with detailed tickets. Customize each ticket with titles, descriptions, and cover colors for enhanced organization. This feature allows you to maintain both a high-level overview and granular details, ensuring nothing slips through the cracks.

      image: '/assets/images/ticketer-project/comprehensive-tickets.png'
      caption : 'Screenshot of Ticketer''s detailed ticket view'  

    - title: 'Intuitive Drag-and-Drop'
      description: >
        Experience seamless task movement with a smooth drag-and-drop interface. Easily rearrange tickets within and across lists, and reorder lists themselves to reflect shifting priorities. This visual and interactive approach makes managing your tasks more engaging and efficient.

      image: '/assets/images/ticketer-project/intuitive-drag-and-drop.mp4'
      caption : 'Video of using Ticketer''s drag-and-drop interface'  

    - title: 'Seamless Account Management'
      description: >
        Get started quickly by signing up with Auth0 or Google, or jump in as a guest to explore Ticketer without any commitments. When you're ready to save your progress, effortlessly transfer your guest data to a permanent account, ensuring your boards are accessible from any device and securely stored in Azure's cloud services for future use.

      image: '/assets/images/ticketer-project/seamless-account-management.png'
      caption : 'Screenshot of the Ticketer login page'  

  visuals:
    demo_video: 'https://www.loom.com/embed/38f2ba3f2177432c8578c549114e7307?sid=820badd7-2327-476a-bf8a-ba81c6fc3ecb'
    dev_video: 'https://www.loom.com/embed/51c2dfa0c7bc4a0696bd262d7a3fb626?sid=bd87c4f6-f438-43f9-b857-a27a224548c7'   
    thumbnail: '/assets/images/project-thumbnail.svg'        

  development_process:
    overview: >
      Developing Ticketer as a solo project was an exhilarating journey that pushed me to expand my technical expertise and problem-solving skills. I wanted to further my skills and versatility as a developer by tackling unfamiliar technologies such as Angular, C#, ASP.NET Core, Azure, and Docker. These technologies presented numerous challenges, each serving as a valuable learning opportunity. Building this comprehensive application from the ground up not only deepened my understanding of full-stack development but also reinforced the importance of meticulous planning and adaptability in overcoming obstacles.

    steps:
      - title: 'Strategic Planning and MVP Definition'
        description: >
          The foundation of Ticketer was laid by meticulously planning out the Minimum Viable Product (MVP). I identified and prioritized key functionalities essential for a robust task management tool, ensuring that each feature aligned with user needs and project goals. This phase involved designing the API architecture, defining database schemas with clear primary keys and relationships, and outlining the core interactions between the frontend and backend. This strategic approach was crucial in setting a clear roadmap and establishing a solid base for Ticketer.

        image: '/assets/images/ticketer-project/mvp-outline.png' 
        caption : 'Screenshot of Ticketer MVP outline document' 

      - title: 'UI/UX Design and API Refinement'
        description: >
          With the MVP outlined, I transitioned to designing the user interface using Figma, keeping the planned APIs in mind. This alignment between UI/UX design and backend development allowed for a more cohesive and intuitive user experience. Detailed wireframes and prototypes provided a clear vision of user interactions, which in turn informed the refinement of API routes, parameters, and data models. This iterative process ensured that the APIs were not only functional but also optimized for seamless integration with the frontend, enhancing overall application efficiency.

        image: '/assets/images/ticketer-project/ui-ux.png'  
        caption : 'Screenshot of board page wireframe'

      - title: 'Optimizing Data Structures for Positioning Systems'
        description: >
          One of the most intricate challenges was managing the dynamic positioning of lists and tickets within the Kanban board. Ensuring that moving a list or ticket seamlessly updated the positions of surrounding items required a robust data structure. I engineered a system where each list and ticket maintained a unique position index, enabling real-time updates and maintaining data integrity. Implementing this with ASP.NET Core and MySQL involved strategies to handle reordering logic efficiently, ensuring smooth and consistent user interactions without compromising performance.

        image: '/assets/images/ticketer-project/db-diagram.png'  
        caption : 'Diagram of Ticketer''s database structure'

      - title: 'Developing a Scalable Menu and Submenu System'
        description: >
          The heart of Ticketer''s user interactions lies in its versatile menu and submenu system. To achieve a clean and reusable solution, I designed a dynamic configuration-based system that dictates the behavior and structure of all menus across the app. By creating a flexible data structure that the menu components could interpret, I eliminated repetitive code and facilitated easy scalability. This approach allowed for effortless addition of new menu items and submenus, ensuring consistency across the application and significantly reducing development time for future enhancements.

        image: '/assets/images/ticketer-project/scalable-menu-system.png'  
        caption : 'Diagram of the board page''s menu/submenu data transfer flow'

      - title: 'Cloud Deployment with Azure and Docker'
        description: >
          Deploying Ticketer on Azure using Docker containers presented a unique set of challenges, particularly in configuring the virtual machines and ensuring secure communications through SSL certificates. I navigated the complexities of Azure's ecosystem by setting up automated deployment scripts, managing container orchestration, and configuring domain settings to establish a reliable and secure production environment. This hands-on experience with cloud services not only optimized the application's scalability and reliability but also showcased my ability to manage end-to-end deployment processes effectively.

        image: '/assets/images/ticketer-project/azure-vm.png' 
        caption : 'Screenshot of Ticketer''s Azure Virtual Machine dashboard' 

      - title: 'Outcomes and Reflections'
        description: >
          Ticketer stands as an example of my ability to independently manage and deliver a complex full-stack application. Successfully integrating Angular with a C# and ASP.NET Core backend, and deploying it on Azure with Docker, has significantly broadened my technical repertoire. The project not only operates seamlessly but also embodies best practices in software development, from efficient data structures to scalable deployment strategies. Reflecting on this journey, I recognize the importance of detailed planning, continuous learning, and adaptability in overcoming challenges, all of which have been instrumental in shaping me into a more proficient and resilient developer.

        image: '/assets/images/ticketer-project/figma-birds-eye-view.png'  
        caption : 'Birds-eye-view screenshot of Ticketer''s architecture'

    lessons_learned: 
      - >
        Throughout the development of Ticketer, one of the most pivotal lessons I learned was the importance of implementing comprehensive testing from the outset. Initially, I underestimated the value of automated tests, believing they might slow down development speed. I had written tests before in earlier projects, with Jest and Vite, but I took them for granted. Because, as Ticketer grew, I encountered multiple scenarios where the absence of tests led to elusive bugs and hindered efficient debugging. 
      - >
        This experience taught me the hard way that a robust testing suite is indispensable for maintaining code quality and reliability, especially in complex applications. Additionally, I gained invaluable insights into effective project management and time allocation, realizing that balancing feature development with thorough testing and documentation is essential for long-term project success.
      - >
        Another significant lesson was the power of leveraging cloud services effectively. Navigating Azure's vast array of tools and services taught me how to optimize resource allocation, enhance application scalability, and ensure robust security measures. Managing Docker containers not only streamlined the deployment process but also reinforced the importance of automation in modern software development. These experiences have equipped me with the skills to architect scalable, secure, and efficient applications, making me a more versatile and capable developer.


- layout: project
  title: 'Boba Business Management'
  slug: 'boba-business-management'
  description: >
    Boba Business Management is a comprehensive platform for simulating an online bubble tea business.
    Every time you open the app, you'll be greeted with new orders to manage, reviews to moderate,
    emails to read, and products to restock. You can switch between Admin and Shopper modes at any time,
    and every action you take in one mode directly affects the other.

  technologies:
    - 'React'
    - 'TypeScript'
    - 'SQLite'
    - 'Jest'
    - 'Auth0'
    - 'Tailwind CSS'

  code_url: 'https://github.com/daniel-grabczewski/boba-business-management'
  demo_url: 'https://daniel-grabczewski.github.io/boba-business-management/admin'

  key_features:
  - title: 'Dashboard Overview'
    description: >
      Monitor your store's health at a glance with an intuitive dashboard that highlights new orders,
      product stock levels, recent reviews, and incoming messages requiring attention. This streamlined
      overview keeps you informed about critical updates, helping you make quick decisions that drive
      business performance. Stay one step ahead with real-time alerts and concise, actionable insights.

    image: '/assets/images/bbm-project/dashboard.png'
    caption: 'Screenshot of the admin dashboard'

  - title: 'Comprehensive Management Pages'
    description: >
      Take charge of your online store with dedicated pages for emails, orders, reviews, and products.
      Each page offers advanced searching, filtering, sorting, and pagination, ensuring you can swiftly
      locate the details you need. Drill down into any item for a closer look, then moderate, respond,
      or update information with ease.

    image: '/assets/images/bbm-project/comprehensive-management.mp4'
    caption: 'Video of interacting with admin pages'

  - title: 'Product Creation & Modification'
    description: >
      Easily build and update your product catalog with detailed entries for name, description, price,
      stock levels, and images. Make real-time edits to reflect changes in inventory or promotional
      pricing, ensuring customers always see accurate information. Keep your listings appealing and
      competitive by refining product details whenever necessary for maximum engagement.

    image: '/assets/images/bbm-project/product-modification.png'
    caption: 'Screenshot of the edit-product page'

  - title: 'Dual-Role Experience'
    description: >
      Effortlessly toggle between Shopper and Admin perspectives to explore your store from every
      angle. In Shopper mode, browse products, fill carts, and leave reviews, while Admin mode handles
      stock management, order processing, and content moderation. Any action in one role instantly
      affects the other, creating a seamless, real-time feedback loop.

    image: '/assets/images/bbm-project/dual-role-experience.mp4'
    caption: 'Video of switching to shopper view and buying products'

  - title: 'Self-Contained Shopper Environment'
    description: >
      Enhance the user journey with a realized shopper environment that goes beyond basic browsing. 
      Shoppers can view and manage orders in a personalized profile, keep a wishlist, and edit personal 
      details like addresses or phone numbers. They can also leave product reviews to share feedback, 
      creating a vibrant shopping experience.
    image: '/assets/images/bbm-project/profile-page.png'
    caption: 'Screenshot of the shopper user''s profile page'


  visuals:
    demo_video: 'https://www.loom.com/embed/d7ee2e9357a14fbab558146a4312a016?sid=99afbb39-59e4-4275-a393-5a41db15d92e'
    dev_video: 'https://www.loom.com/embed/49f11b502ea44106b513c20ec25f087b?sid=b5e50c31-67b2-49ee-bf37-8a4c612fc501'
    thumbnail: '/assets/images/project-thumbnail.svg'

  development_process:
    overview: >
      Our main objective with Boba Business Management was to create a robust, feature-complete application 
      that showcased everything we had learned during our intensive coding bootcamp. We incorporated a 
      familiar tech stack (React, TypeScript, Express, SQLite, and Auth0) while maintaining a systematic 
      approach from the start. By committing to Agile methods, thorough planning, and consistent communication, 
      we tackled complex features like dual-role functionality and daily data generation, infusing a realistic 
      simulation layer into the standard e-commerce environment.

    steps:
      - title: 'Planning the App'
        description: >
          We started by defining a vision that balanced shopper interactions with admin oversight for a 
          two-in-one store simulation. Detailed feature lists and user stories kept both sides aligned, 
          covering real-time stock updates, user reviews, and daily notifications. Once core capabilities 
          were agreed upon, we mapped out our APIs and database schema to anticipate potential bottlenecks. 
          This systematic approach clarified how the front end and back end would interact, saving us from 
          guesswork and streamlining development.

        image: '/assets/images/bbm-project/planning.png'
        caption: 'Screenshot of a portion of API plans for planned features'

      - title: 'Developing the Wireframe'
        description: >
          We transitioned to Figma to wireframe our interfaces collaboratively, making live edits to layout, 
          navigation flow, and user experience. By mapping features and components visually, we reduced the 
          risk of missing essential elements during coding. This phase also sparked discussions about color 
          palettes, branding, and displaying data like product inventories. Ultimately, wireframing aligned 
          our visual goals and user pathways before any code was written, enabling a smoother transition into 
          development.

        image: '/assets/images/bbm-project/wireframe.png'
        caption: 'Screenshot of some wireframes from Figma'

      - title: 'Working Effectively as a Team'
        description: >
          After finalizing wireframes, we adopted an Agile workflow with daily standups to address progress 
          and obstacles. End-of-day retrospectives highlighted wins and areas to refine, keeping morale high 
          and processes agile. Communication thrived in our shared Discord channel, where we quickly tackled 
          code reviews, bug fixes, and urgent questions. This continuous feedback loop ensured issues were 
          resolved before escalating, and everyone felt accountable for the project's success. Collaborative 
          ownership and transparency became the foundation of our productivity.

        image: '/assets/images/bbm-project/discord.png'
        caption: 'Screenshot of our team''s shared Discord channel'

      - title: 'Organization & Task Delegation'
        description: >
          We used Trello to break down each feature into actionable tickets, linking them to relevant 
          wireframes and APIs. Every ticket included clear objectives, acceptance criteria, and any 
          dependencies, so teammates understood their responsibilities. Pull-request duties rotated, 
          providing collective experience in code review, version control, and integration testing. 
          By merging frequently, we prevented major conflicts, ensuring the codebase remained stable. 
          Transparent deadlines and straightforward workflows allowed team members to focus on tasks 
          while keeping sight of overall progress.

        image: '/assets/images/bbm-project/trello-board.png'
        caption: 'Screenshot of delegated tasks on our team''s Trello board'

      - title: 'Ensuring Secure Routes'
        description: >
          We needed a robust security model to protect admin-only pages, so we integrated Auth0 for 
          authentication and a custom layer to verify admin status in our database. This prevented 
          unauthorized changes that could alter product listings, override pricing, or disable items. 
          Each request was scrutinized, ensuring users had proper credentials to perform high-level 
          actions. Rigorous testing and peer reviews helped us identify gaps, reinforcing data integrity 
          and user trust across all sensitive operations.

        image: 'https://upload.wikimedia.org/wikipedia/commons/thumb/3/3d/SB-butik_1941.jpg/330px-SB-butik_1941.jpg'
        caption: 'Layered security for admin privileges'

      - title: 'Enhancing It Further on My Own'
        description: >
          Six months later, I expanded the project into “Boba Business Management,” focusing on realism 
          and user immersion. Randomized daily orders, reviews, and messages added unpredictability, 
          prompting vigilant stock monitoring and review moderation. Query parameters preserved filters, 
          sorts, and searches, addressing a major pain point from the original version. By relaxing 
          authentication, users could easily switch roles, creating a smoother demo experience. This 
          evolution showcased my commitment to iterative improvement and user-focused design.

        image: 'https://upload.wikimedia.org/wikipedia/commons/thumb/3/3d/SB-butik_1941.jpg/330px-SB-butik_1941.jpg'
        caption: 'Personalizing the experience and refining the core features'
        bbm-readme_link: 'https://github.com/daniel-grabczewski/boba-business-management/blob/main/README.md'
        bbm-original_project_link: 'https://github.com/Boba-Buddies/boba-buddies-store'

      - title: 'Outcomes & Reflections'
        description: >
          Boba Business Management successfully demonstrated our full-stack expertise and adaptability, 
          moving seamlessly between shopper and admin views. Our methodical process—roadmapping, 
          wireframing, implementing Agile ceremonies, and rigorous testing—proved that structured 
          planning leads to smoother development cycles. Personally, I learned to balance user 
          convenience against real-world complexity. This experience illuminated the importance of 
          collaborative teamwork, thoughtful design, and ongoing refinement in delivering a robust, 
          future-proof application that truly meets users’ needs. It also solidified my confidence 
          in managing large-scale project coordination.

        image: 'https://upload.wikimedia.org/wikipedia/commons/thumb/3/3d/SB-butik_1941.jpg/330px-SB-butik_1941.jpg'
        caption: 'A journey from concept to completion'

    lessons_learned:
      - >
        Collaboration can be challenging when balancing different schedules and working styles, but our
        daily standups and open communication channels were vital for resolving conflicts. We learned
        that consistent team check-ins create a culture of support and shared progress.
      - >
        Detailed planning prevents feature overload. Initially, too many ideas floated around without a
        solid anchor, risking a chaotic development process. Creating an agreed-upon roadmap, aligning
        features with APIs, and sticking to defined milestones allowed us to deliver a polished, cohesive
        product.
      - >
        Personally, I learned the value of taking ownership. By spearheading the upgraded version,
        “Boba Business Management,” I improved my skills in dynamic feature development, mobile-responsive
        design, and UI/UX enhancements. This experience solidified my confidence as both a contributor
        and a solo developer.
